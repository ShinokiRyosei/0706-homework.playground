import UIKit
/*:
 # Life is Tech! SCHOOL
 # iPhoneコース しのきん班宿題
 ## 提出期限 7/13(水) 第8回
 */
/*:
 ## プログラミング基礎（記述式）
 */

//: Q: `var`と`let`の違いを説明してください
/*解答:
varは変数、letは定数を宣言するときに使う。
変数は何度でも値を変えられるが、定数は一度値を入れたらそれ以後変更することができない。
 
ただ定数は値が変わらないことが保証されているので、メモリの消費が少なくなり、パフォーマンスを向上させる利点があるために、Xcodeは値を変更していない変数を定数に変えることをすすめてくる。
 */
//: Q: `Int`と`Int?`の違いを説明してください（オプショナルとは）
/*解答:
Intは非オプショナルで、nilを許容しない。nilにならない。一方、Int?はオプショナル型でnilを許容する。nilになることができる。

 */
//: Q: 算数や数学で使われる「=」と、プログラミングで使われる「=」の意味の違いを説明してください
/*解答:
算数の「=」は、両辺が同じ・等しいことを意味する。一方、プログラミングの「=」は、右辺から左辺に代入することを意味する。
 */
//: Q: `func`から始まる処理のかたまりをなんというでしょう。（カタカナ4文字）
// 解答: メソッド
//: Q: UILabelやUIButtonなどについている「UI」とはなんの略でしょう。
// 解答: User Interface (ユーザーインターフェイス)
//: Q: ランダムな数のことを漢字二文字でなんというでしょう
// 解答: 乱数
//: Q: クラス内の変数とStoryBoard上の部品を関連付けするために必要な宣言はなんでしょう。カッコ内を埋めてください。
// ( ) weak var label: UILabel! 解答: @IBOutlet
//: Q: クラス内の関数とStoryBoard上での動作を関連付けするために必要な宣言はなんでしょう。1つ目のカッコ内を埋めてください。
// ( ) func plus() { }  解答: @IBAction
//: Q: データの永続化(保存)をしたいときに使われるクラスを答えてください
// 解答: NSUserDefaults　※メモ張の教科書より
//: Q: 剰余の演算子を答えてください
// 解答: % ※カウントアプリの教科書より

/*:
 ## Swift（実技）
 */
//: Q: 自分の名前を文字列型の定数で宣言してください
let name: String = "しのきん"
/*: 解説
 定数なので、letで宣言
 変数名はなんでもよい
 String型を値はかならずダブルコーテーションで囲う
 let name = "しのきん" でもよい
 コロンをつけて型名を明示する必要は必ずしもない。Swiftの型推論のおかげで、ダブルコーテーションで囲われていれば、String型と認識してくれる。
*/

//: Q: 自分の年齢を整数型の変数で宣言してください
var age: Int = 21
/*: 解説
 変数なので、varで宣言
 変数名はなんでもよい
 Int型なので、そのまま数字を記入
 var age = 21 でもよい
 コロンをつけて型名を明示する必要は必ずしもない。Swiftの型推論のおかげで、小数点のない数字はIntとして認識される。小数点がつけば、Double型と認識されてしまうので、注意。
*/
//: Q: 上で宣言した変数の値を来年の自分の年齢にしてください
age = age + 1
/*: 解説
 ageに、age+1したものを代入
 age += 1 でもよい。
 「変数 += 値」で「変数 = 変数 + 値」と同じ意味。
*/
//: Q: 上で宣言した自分の名前を表示するコードを書いてください
print(name)
/*: 解説
 print(変数)でコンソールに変数の値を表示できる。
 NSLogを使って、NSLog(name)でもよいが、printのほうが処理が早いので、printをすすめる。
*/

//: Q: 上で宣言した名前と年齢を用いて、「[名前]は次に[年齢]歳になります。」というように表示するコードを書いてください
print(name + "は次に" + String(age) + "歳になります。")
/*: 解説
 String型は+でいくらでも連結できる。
 nameはString型なので、そのまま+で連結させればよいが、ageはInt型なので、Stringにキャスト(変換)してあげないといけない。
 ただし、Apple推奨の書き方で書くと以下のようになる。
 print("\(name)は次に\(age)歳になります。")
 "\(変数)"で変数の型がなんであっても、String型としてキャスト(変換)してくれる。
*/
//: Q: 成年か、未成年か、とみー(22)と同い年かどうかを判定するコードを書いてください。それぞれ「成人」/「未成年」/「とみーと同い年!」と表示してください
if age == 22 {
    print("とみーと同い年!")
}else if age >= 20 {
    print("成人")
}else {
    print("未成年")
}
/*: 解説
 elseはそれ以外ということなので、else if は上に書いている条件以外かつ、ifで書いている条件を示している。
 今回でいうと、ageが22以外で、20以上の時を表している。
*/
//: Q: for文を使って0~9までを表示してください
for i in 0 ... 9 {
    print(i)
}
/*: 解説
 for i in 0 ..< 10 {
 }
 でもよい。
 for 変数 in 範囲 {
 }
 Swiftではもうfor-in文しか使わないので、for-in文の使い方は要チェック
 参考: http://hidef.jp/post-548/
 
*/

//: Q: for文を使って10~14までを表示してください
for i in 10 ..< 15 {
    print(i)
}
//: Q: for文を使って1~10までの総和を求めてください
var sum: Int = 0
for i in 1 ... 10 {
    sum = sum + i
}
print(sum)
/*: 解説
 まず総和のための、sumという変数をつくる。
 sumにfor-in文ですべての数を足していく。
 変数のスコープという概念を使って。
*/
//: Q: for文とif文を使って0~10までの偶数だけ表示してください
for i in 0 ... 10 {
    if i % 2 == 0 {
        print(i)
    }
}

/*: 解答
 for-in文で、iが0から10までの値を順番に取るので、iが偶数かどうかをif文で判定する。
 if文でiが偶数だった時のみ、printする
*/
//: Q: パブロン、しのきん、きいなが要素である配列を宣言してください
var array: [String] = ["パブロン", "しのき", "きいな"]
/*
 配列の宣言の仕方は以下のとおり
 var 配列名: [型] = [値, 値, 値]
 今回は、String型で
*/
//: Q: 上で宣言した配列に小森さんを追加してください
array.append("小森さま")
//: Q: 配列の長さを表示してください
print(array.count)
//: Q: 配列内のデータすべてを表示してください
for i in array {
    print(i)
}
//: Q: パブロン(22)、しのきん(21)のデータを、keyを名前、valueを年齢として辞書型で宣言してください
var dict: [String: Int] = ["しのきん": 21, "パブロン": 22]
//: Q: 自分の名前と年齢のデータを追加してください
dict["やあああああああああああああああああああ"] =  11

//: Q: 辞書内のデータすべてを「[名前]は[年齢]歳です。」というふうに表示するコードを書いてください
for (key, value) in dict {
    print("\(key)は\(value)歳です。")
    //: Q: ")
}
//: Q: 【発展（任意）】整数型の配列を引数として平均値を出力する関数を作ってください。
func average(numberArray: [Int]) {
    var sum = 0
    for i in numberArray {
        sum = sum + i
    }
    print(sum/numberArray.count)
}
//: Q: 【発展（任意）】上で宣言した関数で、辞書内のデータの年齢の平均値を求めてください。
let numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]
average(numbers)
/*:
 ## アンケート
 - 難しかった
 - ふつう
 - 簡単だった
 */
//
